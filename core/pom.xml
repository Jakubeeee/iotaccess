<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.jakubeeee.masterthesis</groupId>
        <artifactId>parent</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>core</artifactId>
    <description>Deployable module that contains core mechanisms of this project</description>
    <packaging>jar</packaging>

    <dependencies>

        <dependency>
            <groupId>com.jakubeeee.masterthesis</groupId>
            <artifactId>plugin-api</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.jakubeeee.masterthesis</groupId>
            <artifactId>meteo-plugin</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy</artifactId>
        </dependency>
        <dependency>
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.springtestdbunit</groupId>
            <artifactId>spring-test-dbunit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
        </dependency>

    </dependencies>

    <build>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <arguments>--enable-preview</arguments>
                    <jvmArguments>--enable-preview</jvmArguments>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>integrationtest</id>

            <properties>
                <!--//@formatter:off-->
                <random-number-plugin-spi-output-dir>${project.basedir}/src/test/resources/generated/spi</random-number-plugin-spi-output-dir>
                <random-number-plugin-spi-initial-dir>${project.root}/random-number-plugin-spi/target</random-number-plugin-spi-initial-dir>
                <random-number-plugin-spi-jar-name>random-number-plugin-spi-${project.version}.jar</random-number-plugin-spi-jar-name>

                <random-number-plugin-db-output-dir>${project.basedir}/src/test/resources/generated/db</random-number-plugin-db-output-dir>
                <random-number-plugin-db-initial-dir>${project.root}/random-number-plugin-db/target</random-number-plugin-db-initial-dir>
                <random-number-plugin-db-jar-name>random-number-plugin-db-${project.version}.jar</random-number-plugin-db-jar-name>

                <random-number-plugin-fs-output-dir>${project.basedir}/src/test/resources/generated/fs</random-number-plugin-fs-output-dir>
                <random-number-plugin-fs-initial-dir>${project.root}/random-number-plugin-fs/target</random-number-plugin-fs-initial-dir>
                <random-number-plugin-fs-jar-name>random-number-plugin-fs-${project.version}.jar</random-number-plugin-fs-jar-name>
                <!--//@formatter:on-->
            </properties>

            <dependencies>
                <dependency>
                    <groupId>com.jakubeeee.masterthesis</groupId>
                    <artifactId>random-number-plugin-spi</artifactId>
                    <version>1.0-SNAPSHOT</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>

                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                        <filtering>true</filtering>
                    </testResource>
                </testResources>

                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-random-number-plugin-spi-artifact</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${random-number-plugin-spi-output-dir}</outputDirectory>
                                    <overwrite>true</overwrite>
                                    <resources>
                                        <resource>
                                            <directory>${random-number-plugin-spi-initial-dir}</directory>
                                            <includes>
                                                <include>${random-number-plugin-spi-jar-name}</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-random-number-plugin-db-artifact</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${random-number-plugin-db-output-dir}</outputDirectory>
                                    <overwrite>true</overwrite>
                                    <resources>
                                        <resource>
                                            <directory>${random-number-plugin-db-initial-dir}</directory>
                                            <includes>
                                                <include>${random-number-plugin-db-jar-name}</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-random-number-plugin-fs-artifact</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${random-number-plugin-fs-output-dir}</outputDirectory>
                                    <overwrite>true</overwrite>
                                    <resources>
                                        <resource>
                                            <directory>${random-number-plugin-fs-initial-dir}</directory>
                                            <includes>
                                                <include>${random-number-plugin-fs-jar-name}</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>

            </build>

        </profile>
    </profiles>

</project>